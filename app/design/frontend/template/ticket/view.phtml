<?php 
$comments = $this->getTicketDetails();
echo ($this->getStartLevel());
// die;
$tree = $this->buildTreeRecursive($comments, null, 0, $this->getStartLevel()); 
$maxDepth = $this->getMaxDepth($tree);
?>
<span class="d-none" id="ticketId"><?php echo $this->getId(); ?></span>
<div class="main-container">
    <div class="container">
        <div>
            <button type="submit" id="submit-ans">Submit</button>
            <form action="<?php echo $this->getUrl('*/*/*')?>/" method="GET">
                <input type="hidden" name="ticket_id" value="<?php echo $this->getId() ?>">
                <button type="showbtn" name='all' value='1' id="show-comment">Show All Complete Comments</button>
                <input type="text" name="last">
                <button type="showlast5btn" id="show-last5comment">Show Last Comments</button>
            </form>
        </div>
        <table class="main-table">

            <thead>
                <th><?php echo $this->getTicket()->getSubject(); ?></th>
            </thead>

            <tbody class="table-body">
                <?php echo $this->rendorTree($tree, $maxDepth); ?>
            </tbody>

        </table>
    </div>
</div>
<script>
    let replyData = [];
    let prevClass = '';

class changeForm {
    constructor() {
        this.init();
    }

    init() {
        this.bindInput(); 
    }

    updateData(commentId, name, ticketId){

        replyData = {
            'comment_id' : commentId,
            'ticket_id' : ticketId,
            'is_complete' : 1,
            'name' : name
        };
        $.ajax({
            url: 'http://localhost/mvc_copy/ticket/ticket/update/',
            type: 'POST',
            data: { replies: replyData },
            success: function (response) {
                console.log('Raw server response:', response);
                // window.location.reload();
                    
            },
            error: function (xhr, status, error) {
                console.error('Error updating data:', error);
            }
        });
    }

    bindInput() {

        const self = this;
        $(document).on('click' , '.completebtn' , (event) => {
            const parentElement = $(event.target).parent();//currtd
            const commentId = parentElement.data('comment-id');
            const name = parentElement.clone().children().remove().end().text().trim();
            const ticketId = $('#ticketId').html().trim();
            console.log('parentElement : ' , parentElement);
            console.log('commentId : ' , commentId);
            console.log('name : ' , name);
            console.log('ticketId : ' , ticketId);

            const currTr = $(event.target).closest('tr');
            const lastTd = currTr.find('td').last();
            console.log('currTr' , currTr);
            console.log('lastTd' , lastTd);

            this.updateData(commentId , name , ticketId);
        });

        $(document).on('click', '.addreplybtn',  function() {
            const parentId = $(this).data('comment-id') || null;
            // const levelClass = $(this).attr('class').split(' ').find(cls => cls.startsWith('level-'));
            const levelClass = $(this).attr('class').split(' ').find(cls => cls.startsWith('level-'));
            const level = levelClass ? parseInt(levelClass.split('-')[1]) : 0;

            // let classList = prevTd.attr('class');
            // prevClass = (classList || '').split(' ').find(cls => cls.startsWith('level-'));

                const input = $(`
                    <input 
                        type="text" 
                        class="reply-input level-${level}" 
                        data-comment-id="${parentId}" 
                        placeholder="Enter reply"
                        style="display:block; margin-top:10px;"
                    />
                `);

                
                $(this).append(input);
                
                self.insertData();
        }); 
    }

    insertData() {
        const self = this;
        let parentIds = [];
        $('#submit-ans').off('click').on('click', function () {
            // replyData = [];

            // let btn1 = $(document).find('.completebtn');
            // let btn2 = btn1.parent().next();

           
            // console.log(btn2);


            $('.completebtn').each(function () {
                const $btn = $(this);
                const $parentTd = $btn.closest('td');
                const $nextTd = $parentTd.next('td');

                if ($nextTd.find('input').length === 0) {
                    const commentId = $parentTd.data('comment-id');
                    const name = $parentTd.clone().children().remove().end().text().trim();
                    const ticketId = $('#ticketId').text().trim();

                    console.log('commentId:', commentId);
                    console.log('name:', name);
                    console.log('ticketId:', ticketId);

                     self.updateData(commentId, name, ticketId);
                    // replyData.push({ commentId, name, ticketId });
                }
            });

            // $('.completebtn').each(function () {
            //     const $btn = $(this);
            //     const $parentTd = $btn.closest('td');

            //     // Check if this comment has a reply-input directly inside it
            //     const hasInput = $parentTd.find('input.reply-input').length > 0;

            //     if (!hasInput) {
            //         console.log('No input found in:', $parentTd[0]);

            //         const commentId = $parentTd.data('comment-id');
            //         const name = $parentTd.clone().children().remove().end().text().trim();

            //         const ticketId = $('#ticketId').text().trim();

            //         console.log('commentId:', commentId);
            //         console.log('name:', name);
            //         console.log('ticketId:', ticketId);

            //         // self.updateData(commentId, name, ticketId);
            //     }
            // });

            const ticketId = $('#ticketId').html().trim();

             replyData = []; 

            $('.reply-input').each(function () {
                const name = $(this).val().trim();
                const parentId = $(this).data('comment-id') || null;

                if (name !== '') {
                    replyData.push({
                        ticket_id: ticketId,
                        parent_id: parentId,
                        name: name
                    });
                }
            });

            console.log('Stored Reply Data:', replyData);
            $('.reply-input').remove();
           

            $.ajax({
                url: 'http://localhost/mvc_copy/ticket/ticket/save/',
                type: 'POST',
                data: { replies: replyData },
                success: function (response) {
                    console.log(' server response:', response);
                    // window.location.reload();  
                },
                error: function (xhr, status, error) {
                    console.error('Error inserting data:', error);
                }
            });
        });
    }
}

$(document).ready(function () {
    new changeForm();
});

</script>