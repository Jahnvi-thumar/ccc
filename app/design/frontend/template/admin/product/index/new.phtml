<?php 

$categories = $this->getCategory();
$Product = $this->getProduct();
// $attributes = $this->getAttribute();
// echo '<pre>';
// print_r( $Product);
// echo '</pre>';
?>


<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <style>
        .content {
            padding: 35px;
            background: #ffffff;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
            margin: 20px auto;
            width: 90%;
            max-width: 800px;
            border-radius: 15px;
            transition: all 0.3s ease;
        }

        .content:hover {
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
        }

        h1 {
            text-align: center;
            color: #3a7bd5;
            margin-bottom: 25px;
            font-size: 2.2em;
            font-weight: 600;
            position: relative;
            padding-bottom: 10px;
        }

        h1::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: linear-gradient(to right, #3a7bd5, #00d2ff);
            border-radius: 2px;
        }

        form {
            display: flex;
            flex-direction: column;
            gap: 20px;
            margin-top: 30px;
        }

        .form-group {
            display: flex;
            flex-direction: column;
            gap: 8px;
        }

        label {
            font-weight: 600;
            color: #495057;
            font-size: 1.05em;
            transition: color 0.3s ease;
            display: block;
            margin-bottom: 5px;
        }

        input:focus+label,
        textarea:focus+label,
        select:focus+label {
            color: #3a7bd5;
        }

        input,
        textarea,
        select {
            padding: 14px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 1em;
            transition: all 0.3s ease;
            width: 100%;
            background-color: #f8f9fa;
        }

        input:focus,
        textarea:focus,
        select:focus {
            outline: none;
            border-color: #3a7bd5;
            box-shadow: 0 0 0 3px rgba(58, 123, 213, 0.2);
            background-color: #fff;
        }

        textarea {
            min-height: 120px;
            resize: vertical;
        }

        button {
            padding: 14px;
            background: linear-gradient(to right, #3a7bd5, #00d2ff);
            color: #fff;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1.05em;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-top: 10px;
            letter-spacing: 0.5px;
        }

        button:hover {
            background: linear-gradient(to right, #3a6fc7, #00bed9);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(58, 123, 213, 0.4);
        }

        button:active {
            transform: translateY(0);
        }

        /* For dropdown styling */
        select {
            appearance: none;
            background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='%23495057' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right 15px center;
            background-size: 15px;
            padding-right: 40px;
        }

        /* Responsive adjustments */
        @media (max-width: 768px) {
            .content {
                padding: 25px;
                width: 95%;
            }

            h1 {
                font-size: 1.8em;
            }

            input,
            textarea,
            select,
            button {
                padding: 12px;
            }
        }

        /* Animation for form elements */
        @keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .form-group {
            animation: fadeIn 0.5s ease forwards;
        }

        .form-group:nth-child(1) {
            animation-delay: 0.1s;
        }

        .form-group:nth-child(2) {
            animation-delay: 0.2s;
        }

        .form-group:nth-child(3) {
            animation-delay: 0.3s;
        }

        .form-group:nth-child(4) {
            animation-delay: 0.4s;
        }

        /* Focus indication for accessibility */
        *:focus-visible {
            outline: 3px solid rgba(58, 123, 213, 0.5);
            outline-offset: 2px;
        }
    </style>
</head>

<body>
   

    <h1> Add Product</h1>
    <?php echo $this->getHtmlField('formStart', ['method' => 'POST', 'action' => $this->getUrl('*/*/save'), 'enctype' => 'multipart/form-data']); ?>

    <input type="hidden" name="catalog_product[product_id]" value="<?php echo isset($Product) && $Product->getProductId() ? $Product->getProductId() : "0"; ?>">

    <?php echo $this->getHtmlField('label', ['for' => 'name']); ?>
    <?php echo $this->getHtmlField('text', ['id' => 'name', 'name' => "catalog_product[name]", 'value' => isset($Product) ? htmlspecialchars($Product->getName()) : ""]); ?>


    <?php echo $this->getHtmlField('label', ['for' => 'description']); ?>
    <?php echo $this->getHtmlField('textarea', ['id' => 'description', 'name' => "catalog_product[description]", 'value' => isset($Product) ? htmlspecialchars($Product->getDescription()) : ""]); ?>


    <?php echo $this->getHtmlField('label', ['for' => 'sku']); ?>
    <?php echo $this->getHtmlField('text', ['id' => 'sku', 'name' => "catalog_product[sku]", 'value' => isset($Product) ? htmlspecialchars($Product->getSku()) : ""]); ?>


    <?php echo $this->getHtmlField('label', ['for' => 'price']); ?>
    <?php echo $this->getHtmlField('text', ['id' => 'price', 'name' => "catalog_product[price]", 'value' => isset($Product) ? htmlspecialchars($Product->getPrice()) : ""]); ?>


    <?php echo $this->getHtmlField('label', ['for' => 'stock_quantity']); ?>
    <?php echo $this->getHtmlField('text', ['id' => 'stock_quantity', 'name' => "catalog_product[stock_quantity]", 'value' => isset($Product) ? htmlspecialchars($Product->getStockQuantity()) : "0"]); ?>


    <?php echo $this->getHtmlField('label', ['for' => 'category_id']); ?>
    <?php echo $this->getHtmlField('dropDown', [
        'name' => "catalog_product[category_id]",
        'value' => $categories,
        'checked' => isset($Product) ? $Product->getCategoryId() : ""
    ]); ?>

    <h1>Add Attributes</h1>
    <div id="attribute-container">
        <div class="form-group">
            
        <?php echo $this->getHtmlField('label', ['for' => 'brand']); ?>
        <?php echo $this->getHtmlField('text', ['id' => 'brand', 'name' => "catalog_product[brand]", 'value' => isset($Product) ? htmlspecialchars($Product->getBrand()) : ""]); ?>

        <?php echo $this->getHtmlField('label', ['for' => 'color']); ?>
        <?php echo $this->getHtmlField('text', ['id' => 'color', 'name' => "catalog_product[color]", 'value' => isset($Product) ? htmlspecialchars($Product->getColor()) : ""]); ?>

        <?php echo $this->getHtmlField('label', ['for' => 'material']); ?>
        <?php echo $this->getHtmlField('text', ['id' => 'material', 'name' => "catalog_product[material]", 'value' => isset($Product) ? htmlspecialchars($Product->getMaterial()) : ""]); ?>

        <?php echo $this->getHtmlField('label', ['for' => 'model_number']); ?>
        <?php echo $this->getHtmlField('text', ['id' => 'model_number', 'name' => "catalog_product[model_number]", 'value' => isset($Product) ? htmlspecialchars($Product->getModelNumber()) : ""]); ?>

        <?php echo $this->getHtmlField('label', ['for' => 'contry_of_origin']); ?>
        <?php echo $this->getHtmlField('text', ['id' => 'contry_of_origin', 'name' => "catalog_product[country_of_origin]", 'value' => isset($Product) ? htmlspecialchars($Product->getCountryOfOrigin()) : ""]); ?>
        
        </div>
    </div>


    <!-- <h1>Add Attributes</h1>
    <div id="attribute-container">
        <div class="form-group">
            <label for="attributes">Select Attribute</label>
            <select id="attribute-select" onchange="addAttributeField()">
                <option value="">Select an attribute</option>
                <?php //foreach ($attributes as $attribute): ?>
                    <option value="<?php //echo $attribute->getAttributeId(); ?>"
                        data-type="<?php //echo $attribute->getType(); ?>">
                        <?php //echo htmlspecialchars($attribute->getName()); ?>
                    </option>
                <?php //endforeach; ?>
            </select>
        </div>
    </div> -->

    <!-- <button type="button" onclick="addAttributeField()">Add Attribute</button> -->

    <h1>Add Media</h1>
    <div id="media-container">
        <div class="form-group">
            <label for="media">Select Media</label>
            <?php $base_url=Mage::getBaseUri(); ?>
            <input type="file" name="catalog_product[]" id="media"  multiple>
            <?php foreach($Product->getFilepath() as $image) :?>
                <img src="<?php echo $base_url.$image; ?>" width="100" height="100">
                <p><?php print_r($image);?></p>
            <?php endforeach; ?>
        </div>
    </div>

    <button type="submit">Submit</button>
    <?php echo $this->getHtmlField('formend', []); ?>

    <script>
        function addAttributeField() {

            const select = document.getElementById('attribute-select');
            const container = document.getElementById('attribute-container');
            const selectedOption = select.options[select.selectedIndex];

            if (selectedOption.value) {
                const attributeId = selectedOption.value;
                const attributeName = selectedOption.text;
                const attributeType = selectedOption.getAttribute('data-type');

                const fieldWrapper = document.createElement('div');
                fieldWrapper.classList.add('form-group');
                fieldWrapper.innerHTML = `
            <label>${attributeName}</label>
            <input type="hidden" name="catalog_product_attribute[${attributeId}][attribute_id]" value="${attributeId}">
            <input type="${getInputType(attributeType)}" name="catalog_product_attribute[${attributeId}][value]">
        `;

                container.appendChild(fieldWrapper);
            }
        }

        function getInputType(attributeType) {
            switch (attributeType) {
                case 'number':
                    return 'number';
                case 'boolean':
                    return 'checkbox';
                case 'date':
                    return 'date';
                default:
                    return 'text';
            }
        }
    </script>